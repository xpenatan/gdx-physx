[NoDelete]
interface PhysxHelper {
};

[Prefix="physx::"]
interface PxVec3 {
    void PxVec3();
    void PxVec3(float x, float y, float z);
    boolean isZero();
    boolean isFinite();
    boolean isNormalized();
    float magnitudeSquared();
    float magnitude();
    float dot([Const, Ref] PxVec3 v);
    [Value] PxVec3 cross([Const, Ref] PxVec3 v);
    [Value] PxVec3 getNormalized();
    float normalize();
    float normalizeSafe();
    float normalizeFast();
    [Value] PxVec3 multiply([Const, Ref] PxVec3 a);
    [Value] PxVec3 minimum([Const, Ref] PxVec3 v);
    float minElement();
    [Value] PxVec3 maximum([Const, Ref] PxVec3 v);
    float maxElement();
    [Value] PxVec3 abs();
    attribute float x;
    attribute float y;
    attribute float z;
};